# Generated by Django 5.2.3 on 2025-08-02 23:51

import django.db.models.deletion
import imagekit.models.fields
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Album",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("title", models.CharField(max_length=70)),
                ("spec_location", models.CharField(max_length=20)),
                ("region", models.CharField(max_length=20)),
                ("town", models.CharField(max_length=20)),
                ("price", models.FloatField()),
                ("quantity", models.IntegerField(default=1)),
                ("discount_price", models.FloatField(blank=True, null=True)),
                ("real_price", models.FloatField()),
                ("category", models.CharField(max_length=50)),
                ("labels", models.CharField(max_length=20)),
                ("booking_id", models.CharField(blank=True, max_length=30, null=True)),
                ("description", models.TextField()),
                (
                    "thumb",
                    imagekit.models.fields.ProcessedImageField(upload_to="albums"),
                ),
                ("is_visible", models.BooleanField(default=True)),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now_add=True)),
                ("slug", models.SlugField(unique=True)),
            ],
        ),
        migrations.CreateModel(
            name="Apartment_owners",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("address", models.TextField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="ApartmentBooking",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("booking_date", models.DateTimeField(auto_now_add=True)),
                ("meeting_date", models.DateTimeField()),
                ("booking_id", models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name="Coupon",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("code", models.CharField(max_length=15)),
                ("amount", models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name="Courses",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("course_name", models.CharField(max_length=255)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="EmailAdminsNotification",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "email_name",
                    models.CharField(
                        help_text="Email name.",
                        max_length=100,
                        unique=True,
                        verbose_name="Email name",
                    ),
                ),
                (
                    "content",
                    models.TextField(
                        help_text="Content.", max_length=1500, verbose_name="Content"
                    ),
                ),
                (
                    "code",
                    models.CharField(
                        blank=True,
                        help_text="Code.",
                        max_length=100,
                        null=True,
                        verbose_name="Code",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created at"),
                ),
            ],
            options={
                "verbose_name": "Email admins notification",
                "verbose_name_plural": "Email admins notifications",
            },
        ),
        migrations.CreateModel(
            name="EmailDriversNotification",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "email_name",
                    models.CharField(
                        help_text="Email name.",
                        max_length=100,
                        unique=True,
                        verbose_name="Email name",
                    ),
                ),
                (
                    "content",
                    models.TextField(
                        help_text="Content.", max_length=1500, verbose_name="Content"
                    ),
                ),
                (
                    "code",
                    models.CharField(
                        blank=True,
                        help_text="Code.",
                        max_length=100,
                        null=True,
                        verbose_name="Code",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created at"),
                ),
            ],
            options={
                "verbose_name": "Email drivers notification",
                "verbose_name_plural": "Email drivers notifications",
            },
        ),
        migrations.CreateModel(
            name="EmailOwnersNotification",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "email_name",
                    models.CharField(
                        help_text="Email name.",
                        max_length=100,
                        unique=True,
                        verbose_name="Email name",
                    ),
                ),
                (
                    "content",
                    models.TextField(
                        help_text="Content.", max_length=1500, verbose_name="Content"
                    ),
                ),
                (
                    "code",
                    models.CharField(
                        blank=True,
                        help_text="Code.",
                        max_length=100,
                        null=True,
                        verbose_name="Code",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created at"),
                ),
            ],
            options={
                "verbose_name": "Email onwers notification",
                "verbose_name_plural": "Email owners notifications",
            },
        ),
        migrations.CreateModel(
            name="EmailRandomsNotification",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "email_name",
                    models.CharField(
                        help_text="Email name.",
                        max_length=100,
                        unique=True,
                        verbose_name="Email name",
                    ),
                ),
                (
                    "content",
                    models.TextField(
                        help_text="Content.", max_length=1500, verbose_name="Content"
                    ),
                ),
                (
                    "code",
                    models.CharField(
                        blank=True,
                        help_text="Code.",
                        max_length=100,
                        null=True,
                        verbose_name="Code",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created at"),
                ),
            ],
            options={
                "verbose_name": "Email randoms notification",
                "verbose_name_plural": "Email randoms notifications",
            },
        ),
        migrations.CreateModel(
            name="EmailTenantsNotification",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "email_name",
                    models.CharField(
                        help_text="Email name.",
                        max_length=100,
                        unique=True,
                        verbose_name="Email name",
                    ),
                ),
                (
                    "content",
                    models.TextField(
                        help_text="Content.", max_length=1500, verbose_name="Content"
                    ),
                ),
                (
                    "code",
                    models.CharField(
                        blank=True,
                        help_text="Code.",
                        max_length=100,
                        null=True,
                        verbose_name="Code",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created at"),
                ),
            ],
            options={
                "verbose_name": "Email tenants notification",
                "verbose_name_plural": "Email tenants notifications",
            },
        ),
        migrations.CreateModel(
            name="SessionYearModel",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("session_start_year", models.DateField()),
                ("session_end_year", models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name="AlbumImage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "image",
                    imagekit.models.fields.ProcessedImageField(upload_to="albums"),
                ),
                (
                    "thumb",
                    imagekit.models.fields.ProcessedImageField(upload_to="albums"),
                ),
                ("alt", models.CharField(default=uuid.uuid4, max_length=255)),
                ("created", models.DateTimeField(auto_now_add=True)),
                (
                    "slug",
                    models.SlugField(default=uuid.uuid4, editable=False, max_length=70),
                ),
                (
                    "album",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="apartment.album",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="album",
            name="owner_id",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="apartment.apartment_owners",
            ),
        ),
        migrations.CreateModel(
            name="BillingAddress",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("street_address", models.CharField(max_length=100)),
                ("apartment_address", models.CharField(max_length=100)),
                ("Country", models.CharField(max_length=100)),
                ("zip", models.CharField(max_length=10)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="CustomUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("last_login", models.DateTimeField(auto_now=True)),
                (
                    "user_type",
                    models.CharField(
                        choices=[
                            (1, "HOD"),
                            (2, "Apartment_owners"),
                            (3, "Tenants"),
                            (4, "Drivers"),
                            (5, "Random_users"),
                        ],
                        default=1,
                        max_length=10,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="apartment_owners",
            name="admin",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="apartment.customuser"
            ),
        ),
        migrations.CreateModel(
            name="Drivers",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("region", models.CharField(max_length=30)),
                ("current_address", models.TextField(blank=True, null=True)),
                ("familiar_address", models.TextField(blank=True, null=True)),
                ("working_address", models.TextField(blank=True, null=True)),
                (
                    "mobile_number",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                (
                    "vehicle_type",
                    models.CharField(blank=True, max_length=30, null=True),
                ),
                ("nida_number", models.CharField(max_length=30)),
                ("tin_number", models.CharField(max_length=20)),
                ("lnumber", models.CharField(max_length=30)),
                ("pnumber", models.CharField(blank=True, max_length=30, null=True)),
                ("gender", models.CharField(max_length=20)),
                ("profile_picture", models.FileField(upload_to="profile_picture")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "admin",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="apartment.customuser",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="FeedBackDriver",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("feedback", models.TextField()),
                ("feedback_reply", models.TextField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "driver_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="apartment.drivers",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="FeedBackOwner",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("feedback", models.TextField()),
                ("feedback_reply", models.TextField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "owner_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="apartment.apartment_owners",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="LeaveReportOwner",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("leave_date", models.CharField(max_length=255)),
                ("leave_message", models.TextField()),
                ("leave_status", models.IntegerField(default=0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "owner_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="apartment.apartment_owners",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="NotificationDriver",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("message", models.TextField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "driver_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="apartment.drivers",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="NotificationOwner",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("message", models.TextField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "owner_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="apartment.apartment_owners",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Order",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("ref_code", models.CharField(editable=False, max_length=32)),
                ("phone", models.CharField(max_length=25)),
                ("start_date", models.DateTimeField(auto_now_add=True)),
                ("ordered_date", models.DateTimeField()),
                ("ordered", models.BooleanField(default=False)),
                ("total_paid", models.FloatField()),
                ("being_delivered", models.BooleanField(default=False)),
                ("being_received", models.BooleanField(default=False)),
                ("refund_request", models.BooleanField(default=False)),
                ("refund_granted", models.BooleanField(default=False)),
                (
                    "billing_address",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="apartment.billingaddress",
                    ),
                ),
                (
                    "coupon",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="apartment.coupon",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="order_user",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="OrderApartment",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("saved_amount", models.FloatField()),
                ("final_price", models.FloatField()),
                ("quantity", models.IntegerField(default=1)),
                ("ordered", models.BooleanField(default=False)),
                (
                    "item",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="apartment.album",
                    ),
                ),
                (
                    "order",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="order_item",
                        to="apartment.order",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="order_ap_user",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Payment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("stripe_charge_id", models.CharField(max_length=50)),
                ("amounts", models.FloatField()),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="order",
            name="payment",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="apartment.payment",
            ),
        ),
        migrations.CreateModel(
            name="Random_users",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("phone", models.CharField(blank=True, max_length=30, null=True)),
                ("last_login", models.DateTimeField(auto_now=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "admin",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="apartment.customuser",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="NotificationRandom",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "requested_quantity",
                    models.PositiveIntegerField(
                        help_text="Requested quantity.",
                        verbose_name="Requested quantity",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created at"),
                ),
                (
                    "answer_sent",
                    models.BooleanField(
                        default=False,
                        help_text="Answer send.",
                        verbose_name="Answer send",
                    ),
                ),
                (
                    "requested_product",
                    models.ForeignKey(
                        help_text="Requested product.",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="email_product",
                        to="apartment.album",
                        verbose_name="Requested product",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        help_text="Requested user.",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="apartment.random_users",
                        verbose_name="Requested user",
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.AddField(
            model_name="album",
            name="session_year_id",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="apartment.sessionyearmodel",
            ),
        ),
        migrations.CreateModel(
            name="Subjects",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("subject_name", models.CharField(max_length=255)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "course_id",
                    models.ForeignKey(
                        default=1,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="apartment.courses",
                    ),
                ),
                (
                    "owner_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="apartment.customuser",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Attendance",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("attendance_date", models.DateField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "session_year_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="apartment.sessionyearmodel",
                    ),
                ),
                (
                    "subject_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="apartment.subjects",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Tenants",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("gender", models.CharField(max_length=50)),
                ("profile_pic", models.FileField(upload_to="")),
                ("address", models.TextField()),
                ("nida_number", models.CharField(max_length=30)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "admin",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="apartment.customuser",
                    ),
                ),
                (
                    "apartment_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="apartment.album",
                    ),
                ),
                (
                    "course_id",
                    models.ForeignKey(
                        default=1,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="apartment.courses",
                    ),
                ),
                (
                    "owner_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="apartment.apartment_owners",
                    ),
                ),
                (
                    "session_year_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="apartment.sessionyearmodel",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="RequestTermination",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("applied_person", models.CharField(max_length=20)),
                ("reason", models.TextField()),
                ("accepted", models.IntegerField(default=0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "apartment_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="apartment.album",
                    ),
                ),
                (
                    "owner_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="apartment.apartment_owners",
                    ),
                ),
                (
                    "tenant_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="apartment.tenants",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="NotificationTenant",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("message", models.TextField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "tenant_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="apartment.tenants",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="LeaveReportTenant",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("leave_date", models.CharField(max_length=255)),
                ("leave_message", models.TextField()),
                ("leave_status", models.IntegerField(default=0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "tenant_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="apartment.tenants",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="FeedBackTenant",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("feedback", models.TextField()),
                ("feedback_reply", models.TextField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "tenant_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="apartment.tenants",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="AttendanceReport",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("status", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "attendance_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="apartment.attendance",
                    ),
                ),
                (
                    "tenant_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="apartment.tenants",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ApartmentResult",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("apartment_exam_marks", models.IntegerField(default=0)),
                ("apartment_assignment_marks", models.FloatField(default=0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "apartment_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="apartment.album",
                    ),
                ),
                (
                    "tenant_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="apartment.tenants",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Vehicles",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("current_address", models.TextField()),
                ("familiar_address", models.TextField()),
                ("working_address", models.TextField()),
                ("mobile_number", models.CharField(max_length=20)),
                ("vehicle_type", models.CharField(max_length=30)),
                ("pnumber", models.CharField(max_length=30)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "driver_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="apartment.drivers",
                    ),
                ),
            ],
        ),
    ]
